{"ast":null,"code":"import axios from \"axios\"; //import jwtDecode from \"jwt-decode\";\n\nexport var SET_CURRENT_USER = \"SET_CURRENT_USER\"; //const BASE_URL = \"https://dev.gadjian.com\";\n\nexport var setAuthorizationToken = function setAuthorizationToken(token) {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \".concat(token);\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};\nexport var login = function login(data) {\n  return function (dispatch) {\n    return axios.post(\"/oauth/token\", data, {\n      mode: \"no-cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\"\n      },\n      withCredentials: true,\n      credentials: \"same-origin\"\n    }).then(function (res) {\n      var token = res.data;\n      localStorage.setItem(\"jwtToken\", token.token);\n      setAuthorizationToken(token.token);\n      dispatch(setCurrentUser(token));\n      console.log(token);\n    }).catch(function (err) {\n      console.log(\"error: \" + err);\n    });\n  };\n};\nexport var setCurrentUser = function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user: user\n  };\n};","map":{"version":3,"sources":["/Data/Prac/contactmanager_redux/src/actions/authActions.js"],"names":["axios","SET_CURRENT_USER","setAuthorizationToken","token","defaults","headers","common","logout","dispatch","localStorage","removeItem","setCurrentUser","login","data","post","mode","withCredentials","credentials","then","res","setItem","console","log","catch","err","user","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB,C,CAEP;;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,KAAK,EAAI;AAC5C,MAAIA,KAAJ,EAAW;AACTH,IAAAA,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,qBAA2DH,KAA3D;AACD,GAFD,MAEO;AACL,WAAOH,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACD;AACF,CANM;AAQP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAO,UAAAC,QAAQ,EAAI;AACjBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAR,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAM,IAAAA,QAAQ,CAACG,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,IAAI,EAAI;AAC3B,SAAO,UAAAL,QAAQ,EAAI;AACjB,WAAOR,KAAK,CACTc,IADI,CACC,cADD,EACiBD,IADjB,EACuB;AAC1BE,MAAAA,IAAI,EAAE,SADoB;AAE1BV,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,wBAAgB;AAFT,OAFiB;AAM1BW,MAAAA,eAAe,EAAE,IANS;AAO1BC,MAAAA,WAAW,EAAE;AAPa,KADvB,EAUJC,IAVI,CAUC,UAAAC,GAAG,EAAI;AACX,UAAMhB,KAAK,GAAGgB,GAAG,CAACN,IAAlB;AACAJ,MAAAA,YAAY,CAACW,OAAb,CAAqB,UAArB,EAAiCjB,KAAK,CAACA,KAAvC;AACAD,MAAAA,qBAAqB,CAACC,KAAK,CAACA,KAAP,CAArB;AACAK,MAAAA,QAAQ,CAACG,cAAc,CAACR,KAAD,CAAf,CAAR;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACD,KAhBI,EAiBJoB,KAjBI,CAiBE,UAAAC,GAAG,EAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYE,GAAxB;AACD,KAnBI,CAAP;AAoBD,GArBD;AAsBD,CAvBM;AAyBP,OAAO,IAAMb,cAAc,GAAG,SAAjBA,cAAiB,CAAAc,IAAI,EAAI;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEzB,gBADD;AAELwB,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM","sourcesContent":["import axios from \"axios\";\n//import jwtDecode from \"jwt-decode\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\n//const BASE_URL = \"https://dev.gadjian.com\";\n\nexport const setAuthorizationToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport const logout = () => {\n  return dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};\n\nexport const login = data => {\n  return dispatch => {\n    return axios\n      .post(\"/oauth/token\", data, {\n        mode: \"no-cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true,\n        credentials: \"same-origin\"\n      })\n      .then(res => {\n        const token = res.data;\n        localStorage.setItem(\"jwtToken\", token.token);\n        setAuthorizationToken(token.token);\n        dispatch(setCurrentUser(token));\n        console.log(token);\n      })\n      .catch(err => {\n        console.log(\"error: \" + err);\n      });\n  };\n};\n\nexport const setCurrentUser = user => {\n  return {\n    type: SET_CURRENT_USER,\n    user,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}