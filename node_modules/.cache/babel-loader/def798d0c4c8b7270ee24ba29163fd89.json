{"ast":null,"code":"import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nexport var SET_CURRENT_USER = \"SET_CURRENT_USER\";\nvar BASE_URL = \"https://dev.gadjian.com\";\nexport var setAuthorizationToken = function setAuthorizationToken(token) {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \".concat(token);\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};\nexport var login = function login(data) {\n  return function (dispatch) {\n    return axios.post(\"\".concat(BASE_URL, \"/oauth/token\"), data).then(function (res) {\n      var token = res.data.json();\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthorizationToken(token);\n      dispatch(setCurrentUser(jwtDecode(token)));\n    });\n  };\n};\nexport var setCurrentUser = function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user: user\n  };\n};","map":{"version":3,"sources":["/Data/Prac/contactmanager_redux/src/actions/authActions.js"],"names":["axios","jwtDecode","SET_CURRENT_USER","BASE_URL","setAuthorizationToken","token","defaults","headers","common","logout","dispatch","localStorage","removeItem","setCurrentUser","login","data","post","then","res","json","setItem","user","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,IAAMC,QAAQ,GAAG,yBAAjB;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,KAAK,EAAI;AAC5C,MAAIA,KAAJ,EAAW;AACTL,IAAAA,KAAK,CAACM,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,qBAA2DH,KAA3D;AACD,GAFD,MAEO;AACL,WAAOL,KAAK,CAACM,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACD;AACF,CANM;AAQP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAO,UAAAC,QAAQ,EAAI;AACjBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAR,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAM,IAAAA,QAAQ,CAACG,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,IAAI,EAAI;AAC3B,SAAO,UAAAL,QAAQ,EAAI;AACjB,WAAOV,KAAK,CAACgB,IAAN,WAAcb,QAAd,mBAAsCY,IAAtC,EAA4CE,IAA5C,CAAiD,UAAAC,GAAG,EAAI;AAC7D,UAAMb,KAAK,GAAGa,GAAG,CAACH,IAAJ,CAASI,IAAT,EAAd;AACAR,MAAAA,YAAY,CAACS,OAAb,CAAqB,UAArB,EAAiCf,KAAjC;AACAD,MAAAA,qBAAqB,CAACC,KAAD,CAArB;AACAK,MAAAA,QAAQ,CAACG,cAAc,CAACZ,SAAS,CAACI,KAAD,CAAV,CAAf,CAAR;AACD,KALM,CAAP;AAMD,GAPD;AAQD,CATM;AAWP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACQ,IAAD,EAAU;AACtC,SAAO;AACLC,IAAAA,IAAI,EAAEpB,gBADD;AAELmB,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM","sourcesContent":["import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nconst BASE_URL = \"https://dev.gadjian.com\";\n\nexport const setAuthorizationToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport const logout = () => {\n  return dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};\n\nexport const login = data => {\n  return dispatch => {\n    return axios.post(`${BASE_URL}/oauth/token`, data).then(res => {\n      const token = res.data.json();\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthorizationToken(token);\n      dispatch(setCurrentUser(jwtDecode(token)));\n    });\n  };\n};\n\nexport const setCurrentUser = (user) => {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}\n"]},"metadata":{},"sourceType":"module"}