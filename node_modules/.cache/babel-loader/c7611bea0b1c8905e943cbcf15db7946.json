{"ast":null,"code":"import _toConsumableArray from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT, GET_CONTACT, UPDATE_CONTACT } from \"../actions/types\";\nvar initialState = {\n  contacts: {},\n  contact: {}\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: action.payload.data\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(function (contact) {\n          return contact.id !== action.payload;\n        })\n      });\n\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [action.payload].concat(_toConsumableArray(state.contacts))\n      });\n\n    case GET_CONTACT:\n      return _objectSpread({}, state, {\n        contact: action.payload\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(function (contact) {\n          return contact.id === action.payload.id ? contact = action.payload : contact;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Data/Prac/contactmanager_redux/src/reducers/contactReducer.js"],"names":["GET_CONTACTS","DELETE_CONTACT","ADD_CONTACT","GET_CONTACT","UPDATE_CONTACT","initialState","contacts","contact","state","action","type","payload","data","filter","id","map"],"mappings":";;AAAA,SACEA,YADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,cALF,QAMO,kBANP;AAQA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAC,EADU;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,YAAL;AACE,+BACKQ,KADL;AAEEF,QAAAA,QAAQ,EAAEG,MAAM,CAACE,OAAP,CAAeC;AAF3B;;AAIF,SAAKX,cAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeO,MAAf,CACR,UAAAN,OAAO;AAAA,iBAAIA,OAAO,CAACO,EAAR,KAAeL,MAAM,CAACE,OAA1B;AAAA,SADC;AAFZ;;AAMF,SAAKT,WAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,QAAQ,GAAGG,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACF,QAA5B;AAFV;;AAIF,SAAKH,WAAL;AACE,+BACKK,KADL;AAEED,QAAAA,OAAO,EAAEE,MAAM,CAACE;AAFlB;;AAIF,SAAKP,cAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeS,GAAf,CAAmB,UAAAR,OAAO;AAAA,iBAClCA,OAAO,CAACO,EAAR,KAAeL,MAAM,CAACE,OAAP,CAAeG,EAA9B,GACKP,OAAO,GAAGE,MAAM,CAACE,OADtB,GAEIJ,OAH8B;AAAA,SAA1B;AAFZ;;AAQF;AACE,aAAOC,KAAP;AAjCJ;AAmCD","sourcesContent":["import {\n  GET_CONTACTS,\n  DELETE_CONTACT,\n  ADD_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT,\n} from \"../actions/types\";\n\nconst initialState = {\n  contacts:{},\n  contact: {},\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload.data\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case GET_CONTACT:\n      return {\n        ...state,\n        contact: action.payload\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}