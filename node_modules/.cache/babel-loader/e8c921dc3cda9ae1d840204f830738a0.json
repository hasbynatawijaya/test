{"ast":null,"code":"var _jsxFileName = \"/Data/Prac/contactmanager_redux/src/components/layout/TextInputGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nvar TextInputGroup = function TextInputGroup(_ref) {\n  var label = _ref.label,\n      name = _ref.name,\n      value = _ref.value,\n      placeholder = _ref.placeholder,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      error = _ref.error;\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, label), React.createElement(\"input\", {\n    type: type,\n    name: name,\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    placeholder: placeholder,\n    value: value,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), error && React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, error));\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\nexport default TextInputGroup;","map":{"version":3,"sources":["/Data/Prac/contactmanager_redux/src/components/layout/TextInputGroup.js"],"names":["React","PropTypes","classnames","TextInputGroup","label","name","value","placeholder","type","onChange","error","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAQjB;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,KACI,QADJA,KACI;AACJ,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEL,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAvB,CADF,EAEE;AACE,IAAA,IAAI,EAAEI,IADR;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,SAAS,EAAEH,UAAU,CAAC,8BAAD,EAAiC;AACpD,oBAAcQ;AADsC,KAAjC,CAHvB;AAME,IAAA,WAAW,EAAEH,WANf;AAOE,IAAA,KAAK,EAAED,KAPT;AAQE,IAAA,QAAQ,EAAEG,QARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAYGC,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAZZ,CADF;AAgBD,CAzBD;;AA2BAP,cAAc,CAACQ,SAAf,GAA2B;AACzBP,EAAAA,KAAK,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UADC;AAEzBR,EAAAA,IAAI,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UAFE;AAGzBN,EAAAA,WAAW,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAHL;AAIzBP,EAAAA,KAAK,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAJC;AAKzBL,EAAAA,IAAI,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UALE;AAMzBJ,EAAAA,QAAQ,EAAER,SAAS,CAACa,IAAV,CAAeD,UANA;AAOzBH,EAAAA,KAAK,EAAET,SAAS,CAACW;AAPQ,CAA3B;AAUAT,cAAc,CAACY,YAAf,GAA8B;AAC5BP,EAAAA,IAAI,EAAE;AADsB,CAA9B;AAIA,eAAeL,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n"]},"metadata":{},"sourceType":"module"}