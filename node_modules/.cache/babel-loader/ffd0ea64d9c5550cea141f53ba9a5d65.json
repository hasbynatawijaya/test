{"ast":null,"code":"var _jsxFileName = \"/Data/Prac/contactmanager_redux/src/store.js\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nvar initialState = {};\nvar middleware = [thunk];\nvar store = createStore(rootReducer, initialState, compose(applyMiddleware.apply(void 0, middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken); // prevent someone from manually setting a key of 'jwtToken' in localStorage\n\n  try {\n    store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n  } catch (e) {\n    store.dispatch(setCurrentUser({}));\n  }\n}\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n})), document.getElementById(\"root\"));\nexport default store;","map":{"version":3,"sources":["/Data/Prac/contactmanager_redux/src/store.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","initialState","middleware","store","window","__REDUX_DEVTOOLS_EXTENSION__","localStorage","jwtToken","setAuthorizationToken","dispatch","setCurrentUser","jwtDecode","e","ReactDOM","render","document","getElementById"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,IAAMC,YAAY,GAAG,EAArB;AAEA,IAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AAEA,IAAMI,KAAK,GAAGP,WAAW,CACvBI,WADuB,EAEvBC,YAFuB,EAGvBH,OAAO,CACLD,eAAe,MAAf,SAAmBK,UAAnB,CADK,EAELE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFlC,CAHgB,CAAzB;;AASA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzBC,EAAAA,qBAAqB,CAACF,YAAY,CAACC,QAAd,CAArB,CADyB,CAEzB;;AACA,MAAI;AACFJ,IAAAA,KAAK,CAACM,QAAN,CAAeC,cAAc,CAACC,SAAS,CAACL,YAAY,CAACC,QAAd,CAAV,CAA7B;AACD,GAFD,CAEE,OAAOK,CAAP,EAAU;AACVT,IAAAA,KAAK,CAACM,QAAN,CAAeC,cAAc,CAAC,EAAD,CAA7B;AACD;AACF;;AAEDG,QAAQ,CAACC,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEX,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEY,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOA,eAAeb,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken);\n  // prevent someone from manually setting a key of 'jwtToken' in localStorage\n  try {\n    store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n  } catch (e) {\n    store.dispatch(setCurrentUser({}));\n  }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}