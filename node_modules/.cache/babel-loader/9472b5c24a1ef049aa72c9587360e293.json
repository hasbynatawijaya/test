{"ast":null,"code":"import _classCallCheck from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Data/Prac/contactmanager_redux/src/components/contacts/Contacts.js\";\nimport React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { connect } from \"react-redux\";\nimport { getContacts } from \"../../actions/contactActions\";\n\nvar Contacts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contacts, _Component);\n\n  function Contacts() {\n    _classCallCheck(this, Contacts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Contacts).apply(this, arguments));\n  }\n\n  _createClass(Contacts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getContacts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          contacts = _this$props.contacts,\n          loading = _this$props.loading;\n      var loader = React.createElement(\"div\", {\n        class: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n      var contact = React.createElement(\"h1\", {\n        className: \"display-4 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"React\"), \" API TEST Gadjian\");\n      {\n        contacts.map(function (contact) {\n          return React.createElement(Contact, {\n            key: contact.idk,\n            contact: contact,\n            loading: loading,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          });\n        });\n      }\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, loading ? loader : contact);\n    }\n  }]);\n\n  return Contacts;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    contacts: state.contact.contacts,\n    loading: state.async.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getContacts: getContacts\n})(Contacts);","map":{"version":3,"sources":["/Data/Prac/contactmanager_redux/src/components/contacts/Contacts.js"],"names":["React","Component","Contact","connect","getContacts","Contacts","props","contacts","loading","loader","contact","map","idk","mapStateToProps","state","async"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,8BAA5B;;IAEMC,Q;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,WAAX;AACD;;;6BAEQ;AAAA,wBACuB,KAAKE,KAD5B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,OADX,eACWA,OADX;AAGP,UAAMC,MAAM,GAAG;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACA,UAAMC,OAAO,GACX;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,sBADF;AAMA;AACEH,QAAAA,QAAQ,CAACI,GAAT,CAAa,UAAAD,OAAO;AAAA,iBAClB,oBAAC,OAAD;AAAS,YAAA,GAAG,EAAEA,OAAO,CAACE,GAAtB;AAA2B,YAAA,OAAO,EAAEF,OAApC;AAA6C,YAAA,OAAO,EAAEF,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADkB;AAAA,SAApB;AAGD;AAED,aAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBA,OAAO,GAAGC,MAAH,GAAYC,OAApC,CAAP;AACD;;;;EAtBoBT,S;;AAyBvB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCP,IAAAA,QAAQ,EAAEO,KAAK,CAACJ,OAAN,CAAcH,QADQ;AAEhCC,IAAAA,OAAO,EAAEM,KAAK,CAACC,KAAN,CAAYP;AAFW,GAAL;AAAA,CAA7B;;AAKA,eAAeL,OAAO,CACpBU,eADoB,EAEpB;AAAET,EAAAA,WAAW,EAAXA;AAAF,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { connect } from \"react-redux\";\nimport { getContacts } from \"../../actions/contactActions\";\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    const { contacts, loading } = this.props;\n\n    const loader = <div class=\"loader\" />;\n    const contact = (\n      <h1 className=\"display-4 mb-2\">\n        <span className=\"text-danger\">React</span> API TEST Gadjian\n      </h1>\n    );\n\n    {\n      contacts.map(contact => (\n        <Contact key={contact.idk} contact={contact} loading={loading} />\n      ));\n    }\n\n    return <React.Fragment>{loading ? loader : contact}</React.Fragment>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contact.contacts,\n  loading: state.async.loading\n});\n\nexport default connect(\n  mapStateToProps,\n  { getContacts }\n)(Contacts);\n"]},"metadata":{},"sourceType":"module"}