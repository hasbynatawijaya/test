{"ast":null,"code":"import _defineProperty from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Data/Prac/contactmanager_redux/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Data/Prac/contactmanager_redux/src/components/auth/login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/authActions';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n    _this.state = {\n      email: '',\n      password: '',\n      grant_type: 'password'\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      this.props.login(this.state).then( // make sure we use arrow functions to bind `this` correctly\n      function (res) {\n        return _this2.props.history.push('/');\n      }, function (err) {\n        console.log('error: ' + err);\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4 col-md-offset-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"password\"), React.createElement(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Login\"))));\n    }\n  }]);\n\n  return LoginForm;\n}(Component); // let's add some propTypes for additional validation and readability\n\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired // we do not want any state mapped to props, so let's make that first parameter to connect `null`\n\n};\nexport default withRouter(connect(null, {\n  login: login\n})(LoginForm));","map":{"version":3,"sources":["/Data/Prac/contactmanager_redux/src/components/auth/login.js"],"names":["React","Component","connect","login","withRouter","PropTypes","LoginForm","props","state","email","password","grant_type","onSubmit","bind","onChange","e","preventDefault","then","res","history","push","err","console","log","setState","target","name","value","propTypes","func","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,UAAU,EAAC;AAHA,KAAb;AAMA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AATiB;AAUlB;;;;6BAGQE,C,EAAG;AAAA;;AACVA,MAAAA,CAAC,CAACC,cAAF;AACE,WAAKT,KAAL,CAAWJ,KAAX,CAAiB,KAAKK,KAAtB,EAA6BS,IAA7B,EACE;AACA,gBAACC,GAAD;AAAA,eAAS,MAAI,CAACX,KAAL,CAAWY,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CAAT;AAAA,OAFF,EAGE,UAACC,GAAD,EAAS;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,GAAxB;AACD,OALH;AAMH;;;6BAEQN,C,EAAG;AACV,WAAKS,QAAL,qBAAiBT,CAAC,CAACU,MAAF,CAASC,IAA1B,EAAiCX,CAAC,CAACU,MAAF,CAASE,KAA1C;AACD;;;6BAEQ;AAAA,wBACqB,KAAKnB,KAD1B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF;AAAM,QAAA,QAAQ,EAAE,KAAKE,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,OAAtB;AAA8B,QAAA,IAAI,EAAC,OAAnC;AAA2C,QAAA,KAAK,EAAEH,KAAlD;AAAyD,QAAA,QAAQ,EAAE,KAAKK,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFF,EAMI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,EAAE,EAAC,UAA1B;AAAqC,QAAA,IAAI,EAAC,UAA1C;AAAqD,QAAA,KAAK,EAAEJ,QAA5D;AAAsE,QAAA,QAAQ,EAAE,KAAKI,QAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CANJ,EAUE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,CADE,CADF,CADF;AAkBD;;;;EAjDqBb,S,GAmDxB;;;AACAK,SAAS,CAACsB,SAAV,GAAsB;AACpBzB,EAAAA,KAAK,EAAEE,SAAS,CAACwB,IAAV,CAAeC,UADF,CAItB;;AAJsB,CAAtB;AAKA,eAAe1B,UAAU,CAACF,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,KAAK,EAALA;AAAF,CAAP,CAAP,CAAyBG,SAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/authActions';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      grant_type:'password'\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n\n  onSubmit(e) {\n    e.preventDefault();\n      this.props.login(this.state).then(\n        // make sure we use arrow functions to bind `this` correctly\n        (res) => this.props.history.push('/'),\n        (err) => {\n          console.log('error: ' + err);\n        });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-4 col-md-offset-4\">\n      <form onSubmit={this.onSubmit}>\n        <h1>Login</h1>\n        <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"text\" id=\"email\" name=\"email\" value={email} onChange={this.onChange}/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">password</label>\n            <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={this.onChange}/>\n          </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n      </form>\n      </div>\n      </div>\n    );\n  }\n}\n// let's add some propTypes for additional validation and readability\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired\n}\n\n// we do not want any state mapped to props, so let's make that first parameter to connect `null`\nexport default withRouter(connect(null, { login })(LoginForm));"]},"metadata":{},"sourceType":"module"}